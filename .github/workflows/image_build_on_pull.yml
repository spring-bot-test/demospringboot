#While raing a pull request on the main or devops branch, it will test the code
# Generate the report if its success then create a image and push to ACR
name: Building docker image and pushing to ACR on pull request

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main
      - devops

jobs:
  build-and-deploy:
    #needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '18'

    - name: Build Maven project
      run: mvn clean install -DskipTests

    - name: Extract application version and artifactId from pom.xml
      id: extract_version
      run: |
        version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "version=$version" >> $GITHUB_ENV
        artifactId=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
        echo "artifactId=$artifactId" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Azure Container Registry
      run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ vars.ACR_NAME }}.azurecr.io -u ${{ vars.ACR_USERNAME }} --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t ${{ vars.ACR_NAME }}.azurecr.io/${{ env.artifactId }}:${{ env.version }} .
        docker push ${{ vars.ACR_NAME }}.azurecr.io/${{ env.artifactId }}:${{ env.version }}

    - name: Log out from Azure Container Registry
      run: docker logout ${{ vars.ACR_NAME }}.azurecr.io
    - name: Extract and increment version

      run: |
        # Script to increment the version
        current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        IFS='.' read -r major minor patch <<< "$current_version"
        new_minor=$((minor + 1))
        new_version="${major}.${new_minor}.${patch}"
        sed -i "s/<version>${current_version}<\/version>/<version>${new_version}<\/version>/" pom.xml
        echo "Updated version from ${current_version} to ${new_version}"
        git init
        git config --global user.name 'rambabu'
        git config --global user.email 'rajsofdev@gmail.com'
        git checkout ${{ github.head_ref }}
        git add pom.xml
        git commit -m "Increment project version to ${{ env.version }}-build-${{ github.run_number }}"
        git push origin HEAD:${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
